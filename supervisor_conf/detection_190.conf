[program:detection_person]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map person"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_person.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_hand]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map hand"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_hand.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_fire]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map fire"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_fire.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_nest]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map nest"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_nest.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_kite]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map kite"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_kite.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_oil]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map oil"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_oil.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_smoke]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map smoke"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_smoke.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_helmet_suit_smoking]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map helmet_suit_smoking"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_helmet_suit_smoking.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_insulator]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map insulator"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_insulator.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_capacitor_bulge_clf]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map capacitor_bulge_clf"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_capacitor_bulge_clf.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_box_door_clf]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map box_door_clf"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_box_door_clf.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_blurred_dial_clf]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map blurred_dial_clf"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_blurred_dial_clf.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_abnormal_meter_clf]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map abnormal_meter_clf"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_abnormal_meter_clf.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_silicagel_clf]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map silicagel_clf"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_silicagel_clf.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_screen_crash_clf]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map screen_crash_clf"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_screen_crash_clf.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_damaged_clf]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map damaged_clf"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_damaged_clf.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_oil_level]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map oil_level"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_oil_level.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_switch_1_clf]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map switch_1_clf"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_switch_1_clf.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_switch_2_clf]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map switch_2_clf"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_switch_2_clf.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_surface_pollution_clf]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map surface_pollution_clf"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_surface_pollution_clf.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_rust]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map rust"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_rust.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_light_status_clf]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map light_status_clf"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_light_status_clf.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_yaban_clf]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map yaban_clf"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_yaban_clf.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_open_door_clf]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map open_door_clf"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_open_door_clf.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_objects_10_clf]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map objects_10_clf"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_objects_10_clf.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_door_yolo]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map door_yolo"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_door_yolo.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_helmet]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map helmet"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_helmet.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_cigarette]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map cigarette"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_cigarette.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_arm_leg]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map arm_leg"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_arm_leg.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_light_on_off_clf]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map light_on_off_clf"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_light_on_off_clf.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_light_red_green_clf]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map light_red_green_clf"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_light_red_green_clf.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_fence]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map fence"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_fence.log
stdout_logfile_maxbytes=10MB
user=dl

[program:detection_switch_3_clf]
command=/bin/bash -c "/home/dl/miniconda3/envs/sh_cv_robot/bin/python detection.py --model_type_map switch_3_clf"; 被监控的进程启动命令
directory=/home/dl/sh_cv_robot/                ; 执行前要不要先cd到目录去，一般不用
priority=1                    ;数字越高，优先级越高
numprocs=1                    ; 启动几个进程
autostart=true                ; 随着supervisord的启动而启动
autorestart=true              ; 自动重启。。当然要选上了
startretries=5             ; 启动失败时的最多重试次数
exitcodes=0                   ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）
stopasgroup=true
stopsignal=QUIT               ; 用来杀死进程的信号
stopwaitsecs=0              ; 发送SIGKILL前的等待时间
redirect_stderr=true          ; 重定向stderr到stdout
stdout_logfile=/tmp/detection_switch_3_clf.log
stdout_logfile_maxbytes=10MB
user=dl